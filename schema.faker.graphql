type Profile {
  id: ID! 
  gcID: String! @fake(type:uuid)
  name: String! @fake(type:fullName, locale:en_CA)
  email: String! @fake(type:email, locale:en_CA)
  avatar: String @fake(type:avatarUrl, locale:en_CA)
  mobile_phone: String @fake(type:phoneNumber, locale:en_CA)
  office_phone: String @fake(type:phoneNumber, locale:en_CA)
  address: Address
  title_en: String @fake(type:jobTitle, locale:en_CA)
  title_fr: String @fake(type:jobTitle, locale:fr_CA)
  supervisor: Profile 
  org: OrgTier
  orgTiers: [OrgTier!]!   
}

type Address {
  id: ID! 
  street_address: String! @fake(type:streetAddress, locale:en_CA)
  city: String! @fake(type:city, locale:en_CA)
  province: String! @fake(type:state, locale:en_CA)
  postal_code: String! @fake(type:zipCode, locale:en_CA)
  country: String! @examples(values:["Canada"])
}

type OrgTier {
  id: ID! 
  name_en: String! @fake(type:companyCatchPhrase, locale:en_CA)
  name_fr: String! @fake(type:companyCatchPhrase, locale:fr_CA)
  organization: Organization! 
  ownerID: Profile 
  members: [Profile!]! 
}

type Organization {
  id: ID! 
  name_en: String! @fake(type:companyName, locale:en_CA)
  name_fr: String! @fake(type:companyName, locale:fr_CA)
  acronym_en: String!
  acronym_fr: String!
  orgTiers: [OrgTier!]! 
}

type Query{
  user(id: ID): Profile
  allDepartments: [Organization!]
  
}

